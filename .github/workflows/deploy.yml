name: Deploy Django to EC2

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e

            echo "ðŸš€ Starting deployment on EC2..."

            # Update system
            sudo apt-get update -y
            sudo apt-get upgrade -y

            # Install prerequisites
            sudo apt-get install -y python3 python3-pip python3-venv \
              nginx postgresql-client git

            # Create project directory if missing
            mkdir -p /home/ubuntu/backend
            cd /home/ubuntu/backend

            # Clone repo if not exists
            if [ ! -d ".git" ]; then
              git clone https://github.com/claudio-cuellar/my-site.git .
            fi

            # Reset to latest code
            git fetch --all
            git reset --hard origin/main

            # Setup venv if missing
            if [ ! -d "venv" ]; then
              python3 -m venv venv
            fi
            source venv/bin/activate

            # Upgrade pip + install deps
            pip install --upgrade pip
            pip install -r requirements.txt

            # Apply DB migrations
            python manage.py migrate --noinput

            # Collect static files
            python manage.py collectstatic --noinput

            # Setup Gunicorn systemd service if missing
            if [ ! -f "/etc/systemd/system/gunicorn.service" ]; then
              echo "[Unit]
              Description=gunicorn daemon
              After=network.target

              [Service]
              User=ubuntu
              Group=www-data
              WorkingDirectory=/home/ubuntu/backend
              ExecStart=/home/ubuntu/backend/venv/bin/gunicorn --workers 3 --bind unix:/home/ubuntu/backend/gunicorn.sock mysite.wsgi:application

              [Install]
              WantedBy=multi-user.target" | sudo tee /etc/systemd/system/gunicorn.service
            fi

            # Reload systemd and restart services
            sudo systemctl daemon-reload
            sudo systemctl enable gunicorn
            sudo systemctl restart gunicorn

            # Configure Nginx if missing
#            if [ ! -f "/etc/nginx/sites-available/api" ]; then
#              echo "server {
#                  listen 80;
#                  server_name ${NGINX_SERVER_NAME};
#
#                  location = /favicon.ico { access_log off; log_not_found off; }
#                  location /static/ {
#                      root /home/ubuntu/backend;
#                  }
#
#                  location / {
#                      include proxy_params;
#                      proxy_pass http://unix:/home/ubuntu/backend/gunicorn.sock;
#                  }
#              }" | sudo tee /etc/nginx/sites-available/api
#
#              sudo ln -s /etc/nginx/sites-available/api /etc/nginx/sites-enabled
#              sudo rm -f /etc/nginx/sites-enabled/default
#            fi

            # Test and reload nginx
            sudo nginx -t
            sudo systemctl reload nginx

            echo "âœ… Deployment finished successfully!"
          EOF
